안드로이드 특징
- 리눅스 운영체제를 기반
- 운영체제 주요 부분, 구글 앱 코드는 대부분 공개되어있음 (레퍼런스로 열어볼 수 있음)
- 모든 응용 프로그램이 평등, 똑같은 환경에서 똑같은 API 이용
- 앱 실행 시점이 다양하다.
    - 컴포넌트가 독립되어있어서 ex 카톡 알림창 클릭 시 chat 화면으로 바로 진입
    - main fun 의 개념이 없음
- 우리 앱에서 다른 앱의 컴포넌트 사용이 상당히 유연
    - ex 카메라
    - 다른 애플리케이션을 라이브러리 처럼 사용

운영체제 구조
- 시스템 아키텍쳐
- 리눅스 커널 기반
- 안드로이드 런타임 : ART 라는 버츄얼 머신에서 실행
- 설명
    - 자바소스(.java) --- 컴파일 --- > 자바 바이트 코드(.class) [자바 가상 머신 JVM]
    - 안드로이드: 자바소스/ 코틀린 소스 ---컴파일--- > 자바 바이트 코드(.class) --- DEX 컴파일 ---> DEX 바이트 코드(.dex) [안드로이드 런타임 ART]

안드로이드 버전 소개
- 안드로이드 13, 14 버전은 OS 운영체제 버전을 말함
- 개발자 사용하는 버전은 API 레벨(SDK 버전)

컴포넌트
- 애플리케이션의 구성 요소
- 컴포넌트를 조합하여 앱을 만듦
- 컴포넌트는 클래스로 만듦
- 안드로이드 앱을 구성하는 클래스는 다 컴포넌트인가? NO
- 일반 클래스 / 컴포넌트 클래스로 분리
    - 생명주기를 안드로이드 시스템에서 관리한다면 컴포넌트 클래스
- 객체를 생성하고, 소멸 까지 : 라이프 사이클
- 컴포넌트의 종류(4가지)
    - 액티비티 : 화면 구성
    - 서비스 : 백그라운드 작업 ex: 카톡 안할때 카톡받는거
    - 콘텐츠 프로바이더 : 앱의 데이터를 공유
    - 브로드캐스트 리시버 : 시스템 이벤트가 발생할 때 실행되게 하는 컴포넌트
- 독립된 실행단위
    - 서로 종속 X, 코드 결합이 발생하지 않음


리소스 활용
- 리소스란 코드에서 정적인 값을 분리한 것
    - 문자열, 색상, 크기, 레아아웃, 이미지, 메뉴 등 많은 요소 리소스로 활용
    - 이미지 등 몇개 빼고는 다 XML 파일로 작성
